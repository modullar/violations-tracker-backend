name: Violations Tracker CI

on:
  push:
    branches: [ main, 'feature/**', 'bugfix/**', 'develop' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest



    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      


      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'



      - name: Install dependencies
        run: npm ci
      
      - name: Install ESLint
        run: npm install eslint --save-dev
        
      - name: Lint code
        run: npm run lint || true  # Don't fail the build on lint errors for now
        
      - name: Run tests with sanitized fixtures
        run: npm run test:coverage
        env:
          NODE_ENV: test
          CI: true
          JWT_SECRET: ${{ secrets.JWT_SECRET || 'ci_test_secret_key' }}
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          # Set GOOGLE_API_KEY - will be empty if secret is not set
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY || '' }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env.production file
        run: |
          echo "NODE_ENV=production" > .env.production
          echo "PORT=5001" >> .env.production
          echo "MONGO_URI=${{ secrets.MONGO_URI || 'mongodb://localhost:27017/violations-tracker' }}" >> .env.production
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.production
          echo "JWT_EXPIRES_IN=30d" >> .env.production
          echo "JWT_COOKIE_EXPIRE=30" >> .env.production
          echo "CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}" >> .env.production
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env.production
          echo "CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}" >> .env.production

      - name: Build application
        run: npm run build