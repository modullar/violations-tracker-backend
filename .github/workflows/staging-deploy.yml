name: Deploy to Staging

on:
  push:
    branches: [ develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [6.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
        
      - name: Run tests
        run: npm run test:coverage
        env:
          NODE_ENV: test
          MONGO_URI: mongodb://localhost:27017/violations-tracker-test
          JWT_SECRET: ci_test_secret_key

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    
    # This is placeholder configuration. Adjust based on your actual staging environment.
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env.staging file
        run: |
          echo "NODE_ENV=staging" > .env.staging
          echo "PORT=5001" >> .env.staging
          echo "MONGO_URI=${{ secrets.STAGING_MONGO_URI }}" >> .env.staging
          echo "JWT_SECRET=${{ secrets.STAGING_JWT_SECRET }}" >> .env.staging
          echo "JWT_EXPIRES_IN=30d" >> .env.staging
          echo "JWT_COOKIE_EXPIRE=30" >> .env.staging
          echo "GOOGLE_API_KEY=${{ secrets.STAGING_GOOGLE_API_KEY }}" >> .env.staging
          echo "MAPQUEST_API_KEY=${{ secrets.STAGING_MAPQUEST_API_KEY }}" >> .env.staging

      # Example: Deploy to a cloud platform (uncomment and configure for your setup)
      # This is just a placeholder and needs to be adapted to your actual deployment target
      
      # - name: Deploy to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.14
      #   with:
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
      #     heroku_app_name: "violations-tracker-staging"
      #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
      
      # OR for AWS Elastic Beanstalk
      # - name: Deploy to AWS Elastic Beanstalk
      #   uses: einaregilsson/beanstalk-deploy@v21
      #   with:
      #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     application_name: violations-tracker
      #     environment_name: staging
      #     region: us-east-1
      #     version_label: ${{ github.sha }}
      
      # OR for Digital Ocean App Platform
      # - name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      # - name: Deploy to DigitalOcean App Platform
      #   run: doctl apps create-deployment ${{ secrets.DIGITAL_OCEAN_APP_ID }}
      
      - name: Notify deployment
        run: echo "Application would be deployed to staging environment"