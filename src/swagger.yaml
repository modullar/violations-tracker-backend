openapi: 3.0.0
info:
  title: Syria Violations Tracker API
  description: API documentation for the Syria Violations Tracker backend
  version: 1.0.0
  contact:
    email: support@syriaviolations.org

servers:
  - url: /api
    description: API base URL

tags:
  - name: Violations
    description: Operations for tracking violations data
  - name: Authentication
    description: Operations for user authentication
  - name: Users
    description: Operations for user management (admin only)
  - name: Reports
    description: Operations for processing and parsing human rights reports
  - name: Territory Control
    description: Operations for managing territory control data

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ReportParseRequest:
      type: object
      required:
        - reportText
      properties:
        reportText:
          type: string
          description: The text of the human rights report to parse
          minLength: 50
        sourceURL:
          type: object
          properties:
            name:
              type: string
              description: Name of the source
            url:
              type: string
              format: uri
              description: URL of the source document
            reportDate:
              type: string
              description: Date when the report was published
    
    ReportParseResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            jobId:
              type: string
              description: ID of the parsing job
            estimatedProcessingTime:
              type: string
              description: Estimated time to complete the parsing job
            submittedAt:
              type: string
              format: date-time
              description: When the job was submitted
    
    JobStatus:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [queued, processing, validation, creating_violations, completed, failed]
        progress:
          type: integer
          minimum: 0
          maximum: 100
        submittedBy:
          type: string
        submittedAt:
          type: string
          format: date-time
        estimatedProcessingTime:
          type: string
        source:
          type: object
          properties:
            name:
              type: string
            url:
              type: string
            reportDate:
              type: string
        error:
          type: string
        results:
          type: object
          properties:
            parsedViolationsCount:
              type: integer
            createdViolationsCount:
              type: integer
            violations:
              type: array
              items:
                type: string
            failedViolations:
              type: array
              items:
                type: object
    
    JobStatusResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/JobStatus'
    
    JobListResponse:
      type: object
      properties:
        success:
          type: boolean
        count:
          type: integer
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            totalPages:
              type: integer
            totalJobs:
              type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobStatus'
    LocalizedString:
      type: object
      required:
        - en
      properties:
        en:
          type: string
          description: English text
        ar:
          type: string
          description: Arabic text
          
    Location:
      type: object
      required:
        - name
      properties:
        coordinates:
          type: array
          description: Array of [longitude, latitude]. This field is optional and will be automatically set via geocoding based on the location name.
          items:
            type: number
          minItems: 2
          maxItems: 2
        name:
          $ref: '#/components/schemas/LocalizedString'
          description: Location name in English and Arabic
        administrative_division:
          $ref: '#/components/schemas/LocalizedString'
          description: Administrative division in English and Arabic

    Victim:
      type: object
      required:
        - status
      properties:
        age:
          type: integer
          minimum: 0
          maximum: 120
        gender:
          type: string
          enum: [male, female, other, unknown]
        status:
          type: string
          enum: [civilian, combatant, unknown]
        group_affiliation:
          $ref: '#/components/schemas/LocalizedString'
          description: Group affiliation in English and Arabic
        sectarian_identity:
          type: object
          description: Sectarian identity in English and Arabic (both fields optional)
          properties:
            en:
              type: string
              description: English text (optional)
            ar:
              type: string
              description: Arabic text (optional)
        death_date:
          type: string
          format: date

    Violation:
      type: object
      required:
        - type
        - date
        - location
        - description
        - verified
        - certainty_level
      properties:
        type:
          type: string
          enum:
            - AIRSTRIKE
            - CHEMICAL_ATTACK
            - DETENTION
            - DISPLACEMENT
            - EXECUTION
            - SHELLING
            - SIEGE
            - TORTURE
            - MURDER
            - SHOOTING
            - HOME_INVASION
            - EXPLOSION
            - AMBUSH
            - KIDNAPPING
            - LANDMINE
            - OTHER
        date:
          type: string
          format: date
          description: Date of the incident
        reported_date:
          type: string
          format: date
          description: Date when incident was reported
        location:
          $ref: '#/components/schemas/Location'
        description:
          $ref: '#/components/schemas/LocalizedString'
          description: Detailed description of the violation in English and Arabic
        source:
          $ref: '#/components/schemas/LocalizedString'
          description: Source of information in English and Arabic
        source_url:
          $ref: '#/components/schemas/LocalizedString'
          description: Source URL in English and Arabic, each URL up to 1000 characters
        verified:
          type: boolean
        certainty_level:
          type: string
          enum: [confirmed, probable, possible]
        verification_method:
          type: object
          description: Method used for verification in English and Arabic (both fields optional)
          properties:
            en:
              type: string
              description: English text (optional)
            ar:
              type: string
              description: Arabic text (optional)
        casualties:
          type: integer
          minimum: 0
        kidnapped_count:
          type: integer
          minimum: 0
          description: Number of people kidnapped in the incident
        detained_count:
          type: integer
          minimum: 0
          description: Number of people detained in the incident
        injured_count:
          type: integer
          minimum: 0
          description: Number of people injured in the incident
        displaced_count:
          type: integer
          minimum: 0
          description: Number of people displaced in the incident
        victims:
          type: array
          items:
            $ref: '#/components/schemas/Victim'
        perpetrator:
          $ref: '#/components/schemas/LocalizedString'
          description: Entity that committed the violation
        perpetrator_affiliation:
          type: string
          enum: [assad_regime, post_8th_december_government, various_armed_groups, isis, sdf, israel, turkey, druze_militias, russia, iran_shia_militias, international_coalition, bedouins, unknown]
          description: Type of perpetrator affiliation
        perpetrator_affiliation_type:
          type: string
          enum:
            - GOVERNMENT
            - REBEL_GROUP
            - TERRORIST_ORGANIZATION
            - FOREIGN_MILITARY
            - UNKNOWN
            - OTHER
          description: Type of perpetrator affiliation
        media_links:
          type: array
          items:
            type: string
            format: uri
        tags:
          type: array
          items:
            type: object
            properties:
              en:
                type: string
                maxLength: 50
                description: Tag in English
              ar:
                type: string
                maxLength: 50
                description: Tag in Arabic
        related_violations:
          type: array
          items:
            type: string

    ViolationResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/Violation'

    ViolationsListResponse:
      type: object
      properties:
        success:
          type: boolean
        count:
          type: integer
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            totalPages:
              type: integer
            totalResults:
              type: integer
            hasNextPage:
              type: boolean
            hasPrevPage:
              type: boolean
            nextPage:
              type: integer
            prevPage:
              type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Violation'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string

    User:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 6
        role:
          type: string
          enum: [user, editor, admin]
          default: user
        organization:
          type: string

    UserResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/User'

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string

    TerritoryControlFeature:
      type: object
      properties:
        type:
          type: string
          enum: [Feature]
        geometry:
          type: object
          properties:
            type:
              type: string
              enum: [Polygon, MultiPolygon]
            coordinates:
              type: array
        properties:
          type: object
          properties:
            controller:
              type: string
              enum: 
                - assad_regime
                - post_8th_december_government
                - various_armed_groups
                - isis
                - sdf
                - israel
                - turkey
                - druze_militias
                - russia
                - iran_shia_militias
                - international_coalition
                - unknown
                - FOREIGN_MILITARY
                - REBEL_GROUP
            color:
              type: string
              description: 'Optional color field. Accepts hex colors (with or without #, 3 or 6 digits) or CSS color names like red, blue, green, etc.'
              example: '#FF0000 or red'
            name:
              type: object
              properties:
                en:
                  type: string
                ar:
                  type: string

    TerritoryControl:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
          enum: [FeatureCollection]
        features:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryControlFeature'
        date:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        metadata:
          type: object
          properties:
            source:
              type: string
            description:
              type: string
            version:
              type: string

    TerritoryControlResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/TerritoryControl'

    TerritoryControlListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryControl'
        pagination:
          type: object
          properties:
            page:
              type: number
            limit:
              type: number
            total:
              type: number
            totalPages:
              type: number

    TerritoryControlStatsResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            totalRecords:
              type: number
            dateRange:
              type: object
              properties:
                start:
                  type: string
                  format: date
                end:
                  type: string
                  format: date
            controllerDistribution:
              type: object

paths:
  /violations:
    get:
      tags:
        - Violations
      summary: Get all violations
      description: Return violations with filtering, pagination and sorting options
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum:
              - AIRSTRIKE
              - CHEMICAL_ATTACK
              - DETENTION
              - DISPLACEMENT
              - EXECUTION
              - SHELLING
              - SIEGE
              - TORTURE
              - MURDER
              - SHOOTING
              - HOME_INVASION
              - EXPLOSION
              - AMBUSH
              - LANDMINE
              - OTHER
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
        - name: dateFilterType
          in: query
          schema:
            type: string
            enum: [date, reported_date]
            default: date
          description: Which date field to filter by - 'date' for incident date or 'reported_date' for reported date
        - name: location
          in: query
          schema:
            type: string
          description: Location name to search for
        - name: administrative_division
          in: query
          schema:
            type: string
          description: Administrative division to search for
        - name: lang
          in: query
          schema:
            type: string
            enum: [en, ar]
            default: en
          description: Language preference for search and filtering
        - name: certainty_level
          in: query
          schema:
            type: string
            enum: [confirmed, probable, possible]
        - name: verified
          in: query
          schema:
            type: boolean
        - name: perpetrator
          in: query
          schema:
            type: string
        - name: perpetrator_affiliation
          in: query
          schema:
            type: string
        - name: tags
          in: query
          schema:
            type: string
            description: Comma-separated list of tags
        - name: latitude
          in: query
          schema:
            type: number
            format: float
        - name: longitude
          in: query
          schema:
            type: number
            format: float
        - name: radius
          in: query
          schema:
            type: number
            format: float
            description: Radius in kilometers
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: sort
          in: query
          schema:
            type: string
            example: '-date,type'
            description: Comma-separated fields to sort by. Prefix with - for descending order.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationsListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      tags:
        - Violations
      summary: Create a new violation
      description: Add a new violation record (requires editor or admin role)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Violation'
      responses:
        '201':
          description: Violation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /violations/stats:
    get:
      tags:
        - Violations
      summary: Get violation statistics
      description: Return statistics about violations by type, location, time, and casualties
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalViolations:
                        type: integer
                      totalCasualties:
                        type: integer
                      byType:
                        type: array
                        items:
                          type: object
                      byLocation:
                        type: array
                        items:
                          type: object
                      byYear:
                        type: array
                        items:
                          type: object

  /violations/radius/{latitude}/{longitude}/{radius}:
    get:
      tags:
        - Violations
      summary: Get violations within a radius
      description: Return violations within a specified radius from coordinates
      parameters:
        - name: latitude
          in: path
          required: true
          schema:
            type: number
            format: float
        - name: longitude
          in: path
          required: true
          schema:
            type: number
            format: float
        - name: radius
          in: path
          required: true
          schema:
            type: number
            format: float
            description: Radius in kilometers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Violation'

  /violations/{id}:
    get:
      tags:
        - Violations
      summary: Get a single violation
      description: Return a violation by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationResponse'
        '404':
          description: Violation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    put:
      tags:
        - Violations
      summary: Update a violation
      description: Update an existing violation (requires editor or admin role)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Violation'
      responses:
        '200':
          description: Violation updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Violation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      tags:
        - Violations
      summary: Delete a violation
      description: Delete a violation (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Violation deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Violation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate a user and get token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user
      description: Get information about the currently authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    get:
      tags:
        - Authentication
      summary: User logout
      description: Log out the current user
      responses:
        '200':
          description: User logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object

  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Get a list of all users (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      tags:
        - Users
      summary: Create a user
      description: Create a new user (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get a user
      description: Get a user by ID (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    put:
      tags:
        - Users
      summary: Update a user
      description: Update a user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      tags:
        - Users
      summary: Delete a user
      description: Delete a user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /violations/batch:
    post:
      tags:
        - Violations
      summary: Create multiple violations in a batch
      description: Add multiple violation records in a single request (requires editor or admin role)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Violation'
              minItems: 1
      responses:
        '201':
          description: Violations created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                    description: Number of violations created
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Violation'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /reports/parse:
    post:
      tags:
        - Reports
      summary: Submit a report for parsing
      description: Submit a human rights report for automated parsing with Claude AI (requires editor or admin role)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportParseRequest'
            example:
              reportText: "On May 15, 2023, an airstrike hit a residential building in eastern Aleppo, killing 5 civilians and injuring 12 others. The Syrian Observatory for Human Rights reported that the attack was carried out at approximately 3:30 PM local time, targeting the Al-Firdous neighborhood. Residents reported seeing military aircraft in the area shortly before the bombing. Among the dead were two children and an elderly woman. The following day, on May 16, artillery shelling was reported in the rural areas south of Idlib, causing damage to agricultural land but no reported casualties."
              sourceURL:
                name: "Syrian Observatory for Human Rights"
                url: "https://example.com/report-12345"
                reportDate: "2023-05-16"
      responses:
        '200':
          description: Report submitted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportParseResponse'
              example:
                success: true
                data:
                  jobId: "614c5387b45d8e001f3e4a12"
                  estimatedProcessingTime: "2 minutes"
                  submittedAt: "2023-05-17T14:23:45.123Z"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /reports/jobs/{jobId}:
    get:
      tags:
        - Reports
      summary: Get status of a parsing job
      description: Get the status and results of a report parsing job
      security:
        - bearerAuth: []
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
              example:
                success: true
                data:
                  id: "614c5387b45d8e001f3e4a12"
                  status: "completed"
                  progress: 100
                  submittedBy: "John Doe"
                  submittedAt: "2023-05-17T14:23:45.123Z"
                  estimatedProcessingTime: "2 minutes"
                  source:
                    name: "Syrian Observatory for Human Rights"
                    url: "https://example.com/report-12345"
                    reportDate: "2023-05-16"
                  results:
                    parsedViolationsCount: 2
                    createdViolationsCount: 2
                    violations: ["614c5387b45d8e001f3e4a13", "614c5387b45d8e001f3e4a14"]
                    failedViolations: []
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /reports/jobs:
    get:
      tags:
        - Reports
      summary: Get all parsing jobs
      description: Get a list of all report parsing jobs (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: status
          in: query
          schema:
            type: string
            enum: [queued, processing, validation, creating_violations, completed, failed]
      responses:
        '200':
          description: Jobs retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResponse'
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control:
    get:
      tags:
        - Territory Control
      summary: Get all territory control records
      description: Return territory control records with filtering, pagination and sorting options
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
        - name: controller
          in: query
          schema:
            type: string
            enum: [assad_regime, sdf, opposition, ypg, other]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Territory Control
      summary: Create new territory control record
      description: Create a new territory control record with GeoJSON data
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - features
                - date
              properties:
                type:
                  type: string
                  enum: [FeatureCollection]
                features:
                  type: array
                  items:
                    $ref: '#/components/schemas/TerritoryControlFeature'
                date:
                  type: string
                  format: date
                metadata:
                  type: object
                  properties:
                    source:
                      type: string
                    description:
                      type: string
                    version:
                      type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/{id}:
    get:
      tags:
        - Territory Control
      summary: Get territory control by ID
      description: Get a specific territory control record by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Territory Control
      summary: Update territory control record
      description: Update a territory control record
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [FeatureCollection]
                features:
                  type: array
                  items:
                    $ref: '#/components/schemas/TerritoryControlFeature'
                date:
                  type: string
                  format: date
                metadata:
                  type: object
                  properties:
                    source:
                      type: string
                    description:
                      type: string
                    version:
                      type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Territory Control
      summary: Delete territory control record
      description: Delete a territory control record (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/date/{date}:
    get:
      tags:
        - Territory Control
      summary: Get territory control by date
      description: Get territory control data for a specific date
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: Date in YYYY-MM-DD format
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/closest/{date}:
    get:
      tags:
        - Territory Control
      summary: Get closest territory control to date
      description: Get territory control data closest to a specific date
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: Date in YYYY-MM-DD format
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/current:
    get:
      tags:
        - Territory Control
      summary: Get current territory control
      description: Get the most recent territory control data
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/dates:
    get:
      tags:
        - Territory Control
      summary: Get available dates
      description: Get all available dates for territory control data
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: string
                      format: date
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/stats:
    get:
      tags:
        - Territory Control
      summary: Get territory control statistics
      description: Get statistical information about territory control data
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
        - name: controller
          in: query
          schema:
            type: string
            enum: [assad_regime, sdf, opposition, ypg, other]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryControlStatsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/timeline:
    get:
      tags:
        - Territory Control
      summary: Get territory control timeline
      description: Get timeline analysis of territory control changes
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
        - name: controller
          in: query
          schema:
            type: string
            enum: [assad_regime, sdf, opposition, ypg, other]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        changes:
                          type: array
                          items:
                            type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /territory-control/import:
    post:
      tags:
        - Territory Control
      summary: Import territory control data
      description: Import territory control data from external source
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum: [FeatureCollection]
                      features:
                        type: array
                        items:
                          $ref: '#/components/schemas/TerritoryControlFeature'
                      date:
                        type: string
                        format: date
                      metadata:
                        type: object
                options:
                  type: object
                  properties:
                    overwrite:
                      type: boolean
                      default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      imported:
                        type: number
                      skipped:
                        type: number
                      errors:
                        type: array
                        items:
                          type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'